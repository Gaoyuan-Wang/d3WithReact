{"ast":null,"code":"var _jsxFileName = \"/Users/wanggaoyuan/Library/CloudStorage/OneDrive-Personal/Desktop/CS5346/d3WithReact/src/BarPlot.jsx\";\nimport * as d3 from \"d3\";\n//import { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loadData() {\n  var fileFath = \"data/test.csv\";\n  const data = await d3.csv(fileFath);\n  //console.log(data);\n  return data;\n}\n\n// [{\n//   Date : data[0].Date,\n//   AveragePrice : data[0].AveragePrice,\n//   TotalVolume : data[0].TotalVolume,\n//   plu4046 : data[0].plu4046,\n//   plu4225 : data[0].plu4225,\n//   plu4770 : data[0].plu4770,\n//   TotalBags : data[0].TotalBags,\n//   SmallBags : data[0].SmallBags,\n//   LargeBags : data[0].LargeBags,\n//   XLargeBags : data[0].XLargeBags,\n//   type : data[0].type,\n//   region : data[0].region,\n// }]\n\nfunction drawBarChart(data) {\n  // for (let key in data) {\n  //   if (data.hasOwnProperty(key)) { // 确保是对象自有属性，不是原型链上的属性\n  //     console.log(key, data[key]);\n  //   }\n  // }\n  const width = 64000;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n  const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  const x = d3.scaleBand().range([0, width - marginRight]).domain(data.map(d => d.AveragePrice)).padding(1);\n  const y = d3.scaleLinear().domain([0, d3.max(data, d => d.count)]).range([height - marginBottom, marginTop]);\n\n  // Add the x-axis.\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\");\n\n  // Add the y-axis.\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(d3.axisLeft(y));\n\n  // const line = d3.line()\n  //   .x(d => x(d.AveragePrice))\n  //   .y(d => y(d.count));\n\n  // svg.append(\"path\")\n  // .attr(\"fill\", \"none\")\n  // .attr(\"stroke\", \"steelblue\")\n  // .attr(\"stroke-width\", 1.5)\n  // .attr(\"d\", line(data));\n\n  svg.data(data).enter().append(\"rect\").attr(\"x\", d => x(d.AveragePrice)).attr(\"y\", d => y(d.count)).attr(\"width\", 0.1).attr(\"height\", d => height - marginBottom - y(d.count)).attr(\"fill\", \"steelblue\");\n}\nexport default function Chart2() {\n  loadData().then(data => {\n    var count = data.reduce((acc, d) => {\n      acc[d.AveragePrice] = (acc[d.AveragePrice] || 0) + 1;\n      return acc;\n    }, {});\n    var sortedKeys = Object.keys(count).sort((a, b) => Number(a) - Number(b));\n    var sortedObj = [];\n    sortedKeys.forEach(key => {\n      sortedObj.push({\n        AveragePrice: key,\n        count: count[key]\n      });\n    });\n    drawBarChart(sortedObj);\n    return data[0];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_c = Chart2;\nvar _c;\n$RefreshReg$(_c, \"Chart2\");","map":{"version":3,"names":["d3","jsxDEV","_jsxDEV","loadData","fileFath","data","csv","drawBarChart","width","height","marginTop","marginRight","marginBottom","marginLeft","svg","select","append","attr","x","scaleBand","range","domain","map","d","AveragePrice","padding","y","scaleLinear","max","count","call","axisBottom","selectAll","style","axisLeft","enter","Chart2","then","reduce","acc","sortedKeys","Object","keys","sort","a","b","Number","sortedObj","forEach","key","push","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wanggaoyuan/Library/CloudStorage/OneDrive-Personal/Desktop/CS5346/d3WithReact/src/BarPlot.jsx"],"sourcesContent":["import * as d3 from \"d3\";\n//import { useState } from \"react\";\n\nasync function loadData() {\n  var fileFath = \"data/test.csv\"\n  const data = await d3.csv(fileFath);\n  //console.log(data);\n  return data\n}\n\n// [{\n//   Date : data[0].Date,\n//   AveragePrice : data[0].AveragePrice,\n//   TotalVolume : data[0].TotalVolume,\n//   plu4046 : data[0].plu4046,\n//   plu4225 : data[0].plu4225,\n//   plu4770 : data[0].plu4770,\n//   TotalBags : data[0].TotalBags,\n//   SmallBags : data[0].SmallBags,\n//   LargeBags : data[0].LargeBags,\n//   XLargeBags : data[0].XLargeBags,\n//   type : data[0].type,\n//   region : data[0].region,\n// }]\n\n\nfunction drawBarChart(data) {\n\n  // for (let key in data) {\n  //   if (data.hasOwnProperty(key)) { // 确保是对象自有属性，不是原型链上的属性\n  //     console.log(key, data[key]);\n  //   }\n  // }\n  const width = 64000;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n\n  const svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n\n  const x = d3.scaleBand()\n  .range([0, width - marginRight])\n  .domain(data.map(d => d.AveragePrice))\n  .padding(1);\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.count)])\n    .range([height - marginBottom, marginTop]);\n\n    // Add the x-axis.\n  svg.append(\"g\")\n  .attr(\"transform\", `translate(0,${height - marginBottom})`)\n  .call(d3.axisBottom(x))\n  .selectAll(\"text\")\n  .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n  .style(\"text-anchor\", \"end\");\n\n  // Add the y-axis.\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y));\n\n  // const line = d3.line()\n  //   .x(d => x(d.AveragePrice))\n  //   .y(d => y(d.count));\n\n  // svg.append(\"path\")\n  // .attr(\"fill\", \"none\")\n  // .attr(\"stroke\", \"steelblue\")\n  // .attr(\"stroke-width\", 1.5)\n  // .attr(\"d\", line(data));\n\n  svg.data(data)\n  .enter().append(\"rect\")\n  .attr(\"x\", d => x(d.AveragePrice))\n  .attr(\"y\", d => y(d.count))\n  .attr(\"width\", 0.1)\n  .attr(\"height\", d => height - marginBottom - y(d.count))\n  .attr(\"fill\", \"steelblue\");\n\n}\n\nexport default function Chart2() {\n  loadData().then((data) => {\n    var count = data.reduce((acc, d) => {\n      acc[d.AveragePrice] = (acc[d.AveragePrice] || 0) + 1;\n      return acc;\n    }, {});\n    var sortedKeys = Object.keys(count).sort((a, b) => Number(a) - Number(b));\n    var sortedObj = [];\n    sortedKeys.forEach(key => {\n      sortedObj.push({AveragePrice: key, count: count[key]});\n    });\n    drawBarChart(sortedObj);\n    return data[0];\n  });\n  \n  return (\n    <div>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}