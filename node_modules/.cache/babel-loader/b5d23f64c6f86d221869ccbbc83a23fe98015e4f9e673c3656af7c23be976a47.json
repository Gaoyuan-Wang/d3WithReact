{"ast":null,"code":"var _jsxFileName = \"/Users/wanggaoyuan/Library/CloudStorage/OneDrive-Personal/Desktop/CS5346/d3WithReact/src/LinePlot.jsx\";\nimport * as d3 from \"d3\";\n//import { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loadData() {\n  var fileFath = \"data/Avocado_HassAvocadoBoard_20152023v1.0.1.csv\";\n  const data = await d3.csv(fileFath);\n  //console.log(data);\n  return data;\n}\n\n// [{\n//   Date : data[0].Date,\n//   AveragePrice : data[0].AveragePrice,\n//   TotalVolume : data[0].TotalVolume,\n//   plu4046 : data[0].plu4046,\n//   plu4225 : data[0].plu4225,\n//   plu4770 : data[0].plu4770,\n//   TotalBags : data[0].TotalBags,\n//   SmallBags : data[0].SmallBags,\n//   LargeBags : data[0].LargeBags,\n//   XLargeBags : data[0].XLargeBags,\n//   type : data[0].type,\n//   region : data[0].region,\n// }]\n\nfunction drawChart(data) {\n  const width = 640;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n  const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  const x = d3.scaleUtc().domain(d3.extent(data, d => new Date(d.Date))).range([marginLeft, width - marginRight]);\n  const y = d3.scaleLinear().domain([0, d3.max(data, d => d.AveragePrice)]).range([height - marginBottom, marginTop]);\n\n  // Add the x-axis.\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(d3.axisBottom(x));\n\n  // Add the y-axis.\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(d3.axisLeft(y));\n\n  // Add the line.\n\n  // Declare the line generator.\n  const line = d3.line().x(d => x(new Date(d.Date))).y(d => y(d.AveragePrice));\n  svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", line(data));\n}\nfunction drawBarChart(data) {\n  console.log(data);\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      // 确保是对象自有属性，不是原型链上的属性\n      console.log(key, data[key]);\n    }\n  }\n  const width = 640;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n  const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  const x = d3.scaleLinear().domain([0, data.length]).range([marginLeft, width - marginRight]);\n  const y = d3.scaleLinear().domain([0, d3.max(data, d => d.forEach((element, index) => {\n    return element;\n  }))]).range([height - marginBottom, marginTop]);\n\n  // Add the x-axis.\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(d3.axisBottom(x));\n\n  // Add the y-axis.\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(d3.axisLeft(y));\n\n  // const line = d3.line()\n  //   .x(d => x(new Date(d.Date)))\n  //   .y(d => y(d.AveragePrice));\n\n  // svg.append(\"path\")\n  // .attr(\"fill\", \"none\")\n  // .attr(\"stroke\", \"steelblue\")\n  // .attr(\"stroke-width\", 1.5)\n  // .attr(\"d\", line(data));\n}\nexport default function Chart1() {\n  loadData().then(data => {\n    var filteredDataForAlbanyConventional = data.filter(d => d.region === \"Atlanta\" && d.type === \"conventional\");\n    var filteredDataForAlbanyOrganic = data.filter(d => d.region === \"Atlanta\" && d.type === \"organic\");\n    var b1 = data.filter(d => d.region === \"Chicago\" && d.type === \"conventional\");\n    var b2 = data.filter(d => d.region === \"Chicago\" && d.type === \"organic\");\n    var count = data.reduce((acc, d) => {\n      acc[d.AveragePrice] = (acc[d.AveragePrice] || 0) + 1;\n      return acc;\n    }, []);\n    count.sort((a, b) => {\n      console.log(a);\n    });\n    //console.log(count);\n    drawBarChart(count);\n    drawChart(filteredDataForAlbanyConventional);\n    drawChart(filteredDataForAlbanyOrganic);\n    drawChart(b1);\n    drawChart(b2);\n    return data[0];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_c = Chart1;\nvar _c;\n$RefreshReg$(_c, \"Chart1\");","map":{"version":3,"names":["d3","jsxDEV","_jsxDEV","loadData","fileFath","data","csv","drawChart","width","height","marginTop","marginRight","marginBottom","marginLeft","svg","select","append","attr","x","scaleUtc","domain","extent","d","Date","range","y","scaleLinear","max","AveragePrice","call","axisBottom","axisLeft","line","drawBarChart","console","log","key","hasOwnProperty","length","forEach","element","index","Chart1","then","filteredDataForAlbanyConventional","filter","region","type","filteredDataForAlbanyOrganic","b1","b2","count","reduce","acc","sort","a","b","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wanggaoyuan/Library/CloudStorage/OneDrive-Personal/Desktop/CS5346/d3WithReact/src/LinePlot.jsx"],"sourcesContent":["import * as d3 from \"d3\";\n//import { useState } from \"react\";\n\nasync function loadData() {\n  var fileFath = \"data/Avocado_HassAvocadoBoard_20152023v1.0.1.csv\"\n  const data = await d3.csv(fileFath);\n  //console.log(data);\n  return data\n}\n\n// [{\n//   Date : data[0].Date,\n//   AveragePrice : data[0].AveragePrice,\n//   TotalVolume : data[0].TotalVolume,\n//   plu4046 : data[0].plu4046,\n//   plu4225 : data[0].plu4225,\n//   plu4770 : data[0].plu4770,\n//   TotalBags : data[0].TotalBags,\n//   SmallBags : data[0].SmallBags,\n//   LargeBags : data[0].LargeBags,\n//   XLargeBags : data[0].XLargeBags,\n//   type : data[0].type,\n//   region : data[0].region,\n// }]\n\nfunction drawChart(data) {\n  const width = 640;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n\n  const svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n\n  const x = d3.scaleUtc()\n    .domain(d3.extent(data, d => new Date(d.Date)))\n    .range([marginLeft, width - marginRight]);\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.AveragePrice)])\n    .range([height - marginBottom, marginTop]);\n\n    // Add the x-axis.\n  svg.append(\"g\")\n  .attr(\"transform\", `translate(0,${height - marginBottom})`)\n  .call(d3.axisBottom(x));\n\n  // Add the y-axis.\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y));\n\n  // Add the line.\n\n  // Declare the line generator.\n  const line = d3.line()\n      .x(d => x(new Date(d.Date)))\n      .y(d => y(d.AveragePrice));\n\n  svg.append(\"path\")\n  .attr(\"fill\", \"none\")\n  .attr(\"stroke\", \"steelblue\")\n  .attr(\"stroke-width\", 1.5)\n  .attr(\"d\", line(data));\n}\n\nfunction drawBarChart(data) {\n  console.log(data);\n\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) { // 确保是对象自有属性，不是原型链上的属性\n      console.log(key, data[key]);\n    }\n  }\n  const width = 640;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n\n  const svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n\n  const x = d3.scaleLinear()\n    .domain([0, data.length])\n    .range([marginLeft, width - marginRight]);\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.forEach((element, index) => {\n      return element;\n    }))])\n    .range([height - marginBottom, marginTop]);\n\n    // Add the x-axis.\n  svg.append(\"g\")\n  .attr(\"transform\", `translate(0,${height - marginBottom})`)\n  .call(d3.axisBottom(x));\n\n  // Add the y-axis.\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y));\n\n  // const line = d3.line()\n  //   .x(d => x(new Date(d.Date)))\n  //   .y(d => y(d.AveragePrice));\n\n  // svg.append(\"path\")\n  // .attr(\"fill\", \"none\")\n  // .attr(\"stroke\", \"steelblue\")\n  // .attr(\"stroke-width\", 1.5)\n  // .attr(\"d\", line(data));\n\n}\n\nexport default function Chart1() {\n  loadData().then((data) => {\n    var filteredDataForAlbanyConventional = data.filter(d => d.region === \"Atlanta\" && d.type === \"conventional\");\n    var filteredDataForAlbanyOrganic = data.filter(d => d.region === \"Atlanta\" && d.type === \"organic\");\n    var b1 = data.filter(d => d.region === \"Chicago\" && d.type === \"conventional\");\n    var b2 = data.filter(d => d.region === \"Chicago\" && d.type === \"organic\");\n    var count = data.reduce((acc, d) => {\n      acc[d.AveragePrice] = (acc[d.AveragePrice] || 0) + 1;\n      return acc;\n    }, []);\n    count.sort((a, b) => {\n      console.log(a);\n    });\n    //console.log(count);\n    drawBarChart(count);\n    drawChart(filteredDataForAlbanyConventional);\n    drawChart(filteredDataForAlbanyOrganic);\n    drawChart(b1);\n    drawChart(b2);\n    return data[0];\n  });\n  \n  return (\n    <div>\n    </div>\n  )\n}"],"mappings":";AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AACxB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAeC,QAAQA,CAAA,EAAG;EACxB,IAAIC,QAAQ,GAAG,kDAAkD;EACjE,MAAMC,IAAI,GAAG,MAAML,EAAE,CAACM,GAAG,CAACF,QAAQ,CAAC;EACnC;EACA,OAAOC,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,SAASA,CAACF,IAAI,EAAE;EACvB,MAAMG,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,UAAU,GAAG,EAAE;EAErB,MAAMC,GAAG,GAAGd,EAAE,CAACe,MAAM,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC,CAC1CC,IAAI,CAAC,OAAO,EAAET,KAAK,CAAC,CACpBS,IAAI,CAAC,QAAQ,EAAER,MAAM,CAAC;EAEvB,MAAMS,CAAC,GAAGlB,EAAE,CAACmB,QAAQ,CAAC,CAAC,CACpBC,MAAM,CAACpB,EAAE,CAACqB,MAAM,CAAChB,IAAI,EAAEiB,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAC9CC,KAAK,CAAC,CAACX,UAAU,EAAEL,KAAK,GAAGG,WAAW,CAAC,CAAC;EAE3C,MAAMc,CAAC,GAAGzB,EAAE,CAAC0B,WAAW,CAAC,CAAC,CACvBN,MAAM,CAAC,CAAC,CAAC,EAAEpB,EAAE,CAAC2B,GAAG,CAACtB,IAAI,EAAEiB,CAAC,IAAIA,CAAC,CAACM,YAAY,CAAC,CAAC,CAAC,CAC9CJ,KAAK,CAAC,CAACf,MAAM,GAAGG,YAAY,EAAEF,SAAS,CAAC,CAAC;;EAE1C;EACFI,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACdC,IAAI,CAAC,WAAW,EAAG,eAAcR,MAAM,GAAGG,YAAa,GAAE,CAAC,CAC1DiB,IAAI,CAAC7B,EAAE,CAAC8B,UAAU,CAACZ,CAAC,CAAC,CAAC;;EAEvB;EACAJ,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZC,IAAI,CAAC,WAAW,EAAG,aAAYJ,UAAW,KAAI,CAAC,CAC/CgB,IAAI,CAAC7B,EAAE,CAAC+B,QAAQ,CAACN,CAAC,CAAC,CAAC;;EAEvB;;EAEA;EACA,MAAMO,IAAI,GAAGhC,EAAE,CAACgC,IAAI,CAAC,CAAC,CACjBd,CAAC,CAACI,CAAC,IAAIJ,CAAC,CAAC,IAAIK,IAAI,CAACD,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BE,CAAC,CAACH,CAAC,IAAIG,CAAC,CAACH,CAAC,CAACM,YAAY,CAAC,CAAC;EAE9Bd,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACjBC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAC3BA,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CACzBA,IAAI,CAAC,GAAG,EAAEe,IAAI,CAAC3B,IAAI,CAAC,CAAC;AACxB;AAEA,SAAS4B,YAAYA,CAAC5B,IAAI,EAAE;EAC1B6B,OAAO,CAACC,GAAG,CAAC9B,IAAI,CAAC;EAEjB,KAAK,IAAI+B,GAAG,IAAI/B,IAAI,EAAE;IACpB,IAAIA,IAAI,CAACgC,cAAc,CAACD,GAAG,CAAC,EAAE;MAAE;MAC9BF,OAAO,CAACC,GAAG,CAACC,GAAG,EAAE/B,IAAI,CAAC+B,GAAG,CAAC,CAAC;IAC7B;EACF;EACA,MAAM5B,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,UAAU,GAAG,EAAE;EAErB,MAAMC,GAAG,GAAGd,EAAE,CAACe,MAAM,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC,CAC1CC,IAAI,CAAC,OAAO,EAAET,KAAK,CAAC,CACpBS,IAAI,CAAC,QAAQ,EAAER,MAAM,CAAC;EAEvB,MAAMS,CAAC,GAAGlB,EAAE,CAAC0B,WAAW,CAAC,CAAC,CACvBN,MAAM,CAAC,CAAC,CAAC,EAAEf,IAAI,CAACiC,MAAM,CAAC,CAAC,CACxBd,KAAK,CAAC,CAACX,UAAU,EAAEL,KAAK,GAAGG,WAAW,CAAC,CAAC;EAE3C,MAAMc,CAAC,GAAGzB,EAAE,CAAC0B,WAAW,CAAC,CAAC,CACvBN,MAAM,CAAC,CAAC,CAAC,EAAEpB,EAAE,CAAC2B,GAAG,CAACtB,IAAI,EAAEiB,CAAC,IAAIA,CAAC,CAACiB,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC1D,OAAOD,OAAO;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CACJhB,KAAK,CAAC,CAACf,MAAM,GAAGG,YAAY,EAAEF,SAAS,CAAC,CAAC;;EAE1C;EACFI,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACdC,IAAI,CAAC,WAAW,EAAG,eAAcR,MAAM,GAAGG,YAAa,GAAE,CAAC,CAC1DiB,IAAI,CAAC7B,EAAE,CAAC8B,UAAU,CAACZ,CAAC,CAAC,CAAC;;EAEvB;EACAJ,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZC,IAAI,CAAC,WAAW,EAAG,aAAYJ,UAAW,KAAI,CAAC,CAC/CgB,IAAI,CAAC7B,EAAE,CAAC+B,QAAQ,CAACN,CAAC,CAAC,CAAC;;EAEvB;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AAEF;AAEA,eAAe,SAASiB,MAAMA,CAAA,EAAG;EAC/BvC,QAAQ,CAAC,CAAC,CAACwC,IAAI,CAAEtC,IAAI,IAAK;IACxB,IAAIuC,iCAAiC,GAAGvC,IAAI,CAACwC,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACwB,MAAM,KAAK,SAAS,IAAIxB,CAAC,CAACyB,IAAI,KAAK,cAAc,CAAC;IAC7G,IAAIC,4BAA4B,GAAG3C,IAAI,CAACwC,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACwB,MAAM,KAAK,SAAS,IAAIxB,CAAC,CAACyB,IAAI,KAAK,SAAS,CAAC;IACnG,IAAIE,EAAE,GAAG5C,IAAI,CAACwC,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACwB,MAAM,KAAK,SAAS,IAAIxB,CAAC,CAACyB,IAAI,KAAK,cAAc,CAAC;IAC9E,IAAIG,EAAE,GAAG7C,IAAI,CAACwC,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACwB,MAAM,KAAK,SAAS,IAAIxB,CAAC,CAACyB,IAAI,KAAK,SAAS,CAAC;IACzE,IAAII,KAAK,GAAG9C,IAAI,CAAC+C,MAAM,CAAC,CAACC,GAAG,EAAE/B,CAAC,KAAK;MAClC+B,GAAG,CAAC/B,CAAC,CAACM,YAAY,CAAC,GAAG,CAACyB,GAAG,CAAC/B,CAAC,CAACM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;MACpD,OAAOyB,GAAG;IACZ,CAAC,EAAE,EAAE,CAAC;IACNF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnBtB,OAAO,CAACC,GAAG,CAACoB,CAAC,CAAC;IAChB,CAAC,CAAC;IACF;IACAtB,YAAY,CAACkB,KAAK,CAAC;IACnB5C,SAAS,CAACqC,iCAAiC,CAAC;IAC5CrC,SAAS,CAACyC,4BAA4B,CAAC;IACvCzC,SAAS,CAAC0C,EAAE,CAAC;IACb1C,SAAS,CAAC2C,EAAE,CAAC;IACb,OAAO7C,IAAI,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC;EAEF,oBACEH,OAAA;IAAAuD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEV;AAACC,EAAA,GA1BuBnB,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}